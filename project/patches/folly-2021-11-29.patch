diff -ur a/folly/fibers/Fiber.cpp b/folly/fibers/Fiber.cpp
--- a/folly/fibers/Fiber.cpp	2021-11-08 17:31:25.000000000 +0800
+++ b/folly/fibers/Fiber.cpp	2021-11-11 15:04:59.767236479 +0800
@@ -80,7 +80,7 @@
 void Fiber::init(bool recordStackUsed) {
 // It is necessary to disable the logic for ASAN because we change
 // the fiber's stack.
-#ifndef FOLLY_SANITIZE_ADDRESS
+#ifndef FOLLY_LIBRARY_SANITIZE_ADDRESS
   recordStackUsed_ = recordStackUsed;
   if (UNLIKELY(recordStackUsed_ && !stackFilledWithMagic_)) {
     CHECK_EQ(
@@ -104,7 +104,7 @@
 }

 Fiber::~Fiber() {
-#ifdef FOLLY_SANITIZE_ADDRESS
+#ifdef FOLLY_LIBRARY_SANITIZE_ADDRESS
   if (asanFakeStack_ != nullptr) {
     fiberManager_.freeFakeStack(asanFakeStack_);
   }
@@ -116,7 +116,7 @@
 void Fiber::recordStackPosition() {
   // For ASAN builds, functions may run on fake stack.
   // So we cannot get meaningful stack position.
-#ifndef FOLLY_SANITIZE_ADDRESS
+#ifndef FOLLY_LIBRARY_SANITIZE_ADDRESS
   int stackDummy;
   auto currentPosition = static_cast<size_t>(
       fiberStackLimit_ + fiberStackSize_ -
@@ -127,7 +127,7 @@
 }

 [[noreturn]] void Fiber::fiberFunc() {
-#ifdef FOLLY_SANITIZE_ADDRESS
+#ifdef FOLLY_LIBRARY_SANITIZE_ADDRESS
   fiberManager_.registerFinishSwitchStackWithAsan(
       nullptr, &asanMainStackBase_, &asanMainStackSize_);
 #endif
diff -ur a/folly/fibers/Fiber.h b/folly/fibers/Fiber.h
--- a/folly/fibers/Fiber.h	2021-11-07 17:31:25.000000000 +0800
+++ b/folly/fibers/Fiber.h	2021-11-11 15:04:59.766236472 +0800
@@ -193,7 +193,7 @@
   folly::IntrusiveListHook globalListHook_; /**< list hook for global list */
   std::thread::id threadId_{};

-#ifdef FOLLY_SANITIZE_ADDRESS
+#ifdef FOLLY_LIBRARY_SANITIZE_ADDRESS
   void* asanFakeStack_{nullptr};
   const void* asanMainStackBase_{nullptr};
   size_t asanMainStackSize_{0};
diff -ur a/folly/fibers/FiberManager.cpp b/folly/fibers/FiberManager.cpp
--- a/folly/fibers/FiberManager.cpp	2021-11-07 17:31:25.000000000 +0800
+++ b/folly/fibers/FiberManager.cpp	2021-11-11 15:04:59.769236494 +0800
@@ -33,7 +33,7 @@
 #include <folly/portability/Unistd.h>
 #include <folly/synchronization/SanitizeThread.h>

-#ifdef FOLLY_SANITIZE_ADDRESS
+#ifdef FOLLY_LIBRARY_SANITIZE_ADDRESS

 #ifndef _WIN32
 #include <dlfcn.h>
@@ -219,7 +219,7 @@
   }
 }

-#ifdef FOLLY_SANITIZE_ADDRESS
+#ifdef FOLLY_LIBRARY_SANITIZE_ADDRESS

 void FiberManager::registerStartSwitchStackWithAsan(
     void** saveFakeStack, const void* stackBottom, size_t stackSize) {
@@ -334,7 +334,7 @@
   return nullptr;
 }

-#endif // FOLLY_SANITIZE_ADDRESS
+#endif // FOLLY_LIBRARY_SANITIZE_ADDRESS

 // TVOS and WatchOS platforms have SIGSTKSZ but not sigaltstack
 #if defined(SIGSTKSZ) && !FOLLY_APPLE_TVOS && !FOLLY_APPLE_WATCHOS
diff -ur a/folly/fibers/FiberManagerInternal.h b/folly/fibers/FiberManagerInternal.h
--- a/folly/fibers/FiberManagerInternal.h	2021-11-07 17:31:25.000000000 +0800
+++ b/folly/fibers/FiberManagerInternal.h	2021-11-11 15:04:59.768236487 +0800
@@ -602,7 +602,7 @@
   void runReadyFiber(Fiber* fiber);
   void remoteReadyInsert(Fiber* fiber);

-#ifdef FOLLY_SANITIZE_ADDRESS
+#ifdef FOLLY_LIBRARY_SANITIZE_ADDRESS

   // These methods notify ASAN when a fiber is entered/exited so that ASAN can
   // find the right stack extents when it needs to poison/unpoison the stack.
@@ -614,7 +614,7 @@
   void freeFakeStack(void* fakeStack);
   void unpoisonFiberStack(const Fiber* fiber);

-#endif // FOLLY_SANITIZE_ADDRESS
+#endif // FOLLY_LIBRARY_SANITIZE_ADDRESS

   bool alternateSignalStackRegistered_{false};

diff -ur a/folly/fibers/FiberManagerInternal-inl.h b/folly/fibers/FiberManagerInternal-inl.h
--- a/folly/fibers/FiberManagerInternal-inl.h	2021-11-07 17:31:25.000000000 +0800
+++ b/folly/fibers/FiberManagerInternal-inl.h	2021-11-11 15:04:59.765236464 +0800
@@ -66,7 +66,7 @@
 inline void FiberManager::activateFiber(Fiber* fiber) {
   DCHECK_EQ(activeFiber_, (Fiber*)nullptr);

-#ifdef FOLLY_SANITIZE_ADDRESS
+#ifdef FOLLY_LIBRARY_SANITIZE_ADDRESS
   DCHECK(!fiber->asanMainStackBase_);
   DCHECK(!fiber->asanMainStackSize_);
   auto stack = fiber->getStack();
@@ -86,7 +86,7 @@
 inline void FiberManager::deactivateFiber(Fiber* fiber) {
   DCHECK_EQ(activeFiber_, fiber);

-#ifdef FOLLY_SANITIZE_ADDRESS
+#ifdef FOLLY_LIBRARY_SANITIZE_ADDRESS
   DCHECK(fiber->asanMainStackBase_);
   DCHECK(fiber->asanMainStackSize_);

diff -ur a/folly/logging/example/CMakeLists.txt b/folly/logging/example/CMakeLists.txt
--- a/folly/logging/example/CMakeLists.txt	2021-11-07 17:31:25.000000000 +0800
+++ b/folly/logging/example/CMakeLists.txt	2021-11-11 15:04:16.454086020 +0800
@@ -12,8 +12,5 @@
 # See the License for the specific language governing permissions and
 # limitations under the License.

-add_executable(logging_example main.cpp)
-target_link_libraries(logging_example logging_example_lib folly)
-
 add_library(logging_example_lib lib.cpp)
 target_link_libraries(logging_example_lib folly)
diff -ur a/folly/experimental/exception_tracer/ExceptionTracerLib.cpp b/folly/experimental/exception_tracer/ExceptionTracerLib.cpp
--- a/folly/experimental/exception_tracer/ExceptionTracerLib.cpp      2021-11-07 17:31:23.000000000 -0800
+++ b/folly/experimental/exception_tracer/ExceptionTracerLib.cpp      2021-11-13 15:33:48.210905548 -0800
@@ -96,6 +96,7 @@
 #define __builtin_unreachable()
 #endif

+#if 0
 namespace __cxxabiv1 {

 void __cxa_throw(
@@ -154,5 +155,6 @@
 }

 } // namespace std
+#endif  // 0

 #endif // defined(__GLIBCXX__)
diff -ur a/CMake/folly-deps.cmake b/CMake/folly-deps.cmake
--- a/CMake/folly-deps.cmake	2021-11-29 12:20:59.000000000 +0800
+++ b/CMake/folly-deps.cmake	2021-12-19 10:51:58.749016148 +0800
@@ -125,9 +125,9 @@
   list(APPEND FOLLY_LINK_LIBRARIES ${SNAPPY_LIBRARY})
 endif()

-find_package(LibDwarf)
-list(APPEND FOLLY_LINK_LIBRARIES ${LIBDWARF_LIBRARIES})
-list(APPEND FOLLY_INCLUDE_DIRECTORIES ${LIBDWARF_INCLUDE_DIRS})
+#find_package(LibDwarf)
+#list(APPEND FOLLY_LINK_LIBRARIES ${LIBDWARF_LIBRARIES})
+#list(APPEND FOLLY_INCLUDE_DIRECTORIES ${LIBDWARF_INCLUDE_DIRS})

 find_package(Libiberty)
 list(APPEND FOLLY_LINK_LIBRARIES ${LIBIBERTY_LIBRARIES})
diff -ur a/folly/Demangle.cpp b/folly/Demangle.cpp
--- a/folly/Demangle.cpp	2021-11-29 12:20:59.000000000 +0800
+++ b/folly/Demangle.cpp	2021-12-24 16:32:28.191515416 +0800
@@ -29,7 +29,7 @@
 //  symbol basename. Unfortunately, the declarations are different. So including
 //  both headers in the same translation unit fails due to the two conflicting
 //  declarations. Since <demangle.h> includes <libiberty.h> we must be careful.
-#if __has_include(<demangle.h>)
+#if 0
 #pragma push_macro("HAVE_DECL_BASENAME")
 #define HAVE_DECL_BASENAME 1
 #include <demangle.h> // @manual
@@ -58,7 +58,7 @@
 //
 //  in contrast with cxxabi, where there are certainly other referenced symbols

-#if __has_include(<demangle.h>)
+#if 0

 static constexpr auto liberty_demangle = cplus_demangle_v3_callback;

diff -ur a/folly/io/async/SSLOptions.cpp b/folly/io/async/SSLOptions.cpp
--- a/folly/io/async/SSLOptions.cpp	2022-04-01 16:35:24.101716500 +0800
+++ b/folly/io/async/SSLOptions.cpp	2022-04-01 15:58:07.771716500 +0800
@@ -23,11 +23,7 @@
 namespace folly {
 namespace ssl {
 
-namespace ssl_options_detail {
-void logDfatal(std::exception const& e) {
-  LOG(DFATAL) << exceptionStr(e);
-}
-} // namespace ssl_options_detail
+namespace ssl_options_detail {} // namespace ssl_options_detail
 
 void SSLCommonOptions::setClientOptions(SSLContext& ctx) {
 #ifdef SSL_MODE_HANDSHAKE_CUTTHROUGH
diff -ur a/folly/io/async/SSLOptions.h b/folly/io/async/SSLOptions.h
--- a/folly/io/async/SSLOptions.h	2022-04-01 16:35:24.101716500 +0800
+++ b/folly/io/async/SSLOptions.h	2022-04-01 15:58:07.771716500 +0800
@@ -22,9 +22,7 @@
 namespace folly {
 namespace ssl {
 
-namespace ssl_options_detail {
-void logDfatal(std::exception const&);
-} // namespace ssl_options_detail
+namespace ssl_options_detail {}
 
 struct SSLCommonOptions {
   /**
@@ -143,7 +141,7 @@
 #endif
     ctx.setCipherList(TSSLOptions::ciphers());
   } catch (std::runtime_error const& e) {
-    ssl_options_detail::logDfatal(e);
+    LOG(DFATAL) << exceptionStr(e);
   }
 }
 
@@ -158,7 +156,7 @@
   try {
     ctx.setCipherList(cipherList);
   } catch (std::runtime_error const& e) {
-    ssl_options_detail::logDfatal(e);
+    LOG(DFATAL) << exceptionStr(e);
   }
 }
 
@@ -172,7 +170,7 @@
   try {
     ctx.setSignatureAlgorithms(TSSLOptions::sigalgs());
   } catch (std::runtime_error const& e) {
-    ssl_options_detail::logDfatal(e);
+    LOG(DFATAL) << exceptionStr(e);
   }
 }
 
diff -ur a/folly/synchronization/Rcu.cpp b/folly/synchronization/Rcu.cpp
--- a/folly/synchronization/Rcu.cpp	2022-04-01 16:35:24.101716500 +0800
+++ b/folly/synchronization/Rcu.cpp	2022-04-01 15:58:07.721716500 +0800
@@ -17,11 +17,3 @@
 #include <folly/synchronization/Rcu.h>
 
 #include <folly/detail/StaticSingletonManager.h>
-
-namespace folly {
-
-FOLLY_STATIC_CTOR_PRIORITY_MAX folly::Indestructible<rcu_domain<RcuTag>*>
-    rcu_default_domain_(
-        &folly::detail::createGlobal<rcu_domain<RcuTag>, RcuTag>());
-
-} // namespace folly
diff -ur a/folly/synchronization/Rcu.h b/folly/synchronization/Rcu.h
--- a/folly/synchronization/Rcu.h	2022-04-01 16:35:24.101716500 +0800
+++ b/folly/synchronization/Rcu.h	2022-04-01 15:58:07.721716500 +0800
@@ -407,10 +407,10 @@
   void half_sync(bool blocking, list_head& cbs);
 };
 
-extern folly::Indestructible<rcu_domain<RcuTag>*> rcu_default_domain_;
-
 inline rcu_domain<RcuTag>* rcu_default_domain() {
-  return *rcu_default_domain_;
+  static folly::Indestructible<rcu_domain<RcuTag>*> rcu_default_domain_my(
+      &folly::detail::createGlobal<rcu_domain<RcuTag>, RcuTag>());
+  return *rcu_default_domain_my;
 }
 
 // Main reader guard class.  Use rcu_reader instead unless you need to
