name: build

on:
  push:
    branches:
      - master
    paths-ignore:
      - 'docker/buildx/**.Dockerfile'
  workflow_run:
    workflows:
      - docker
    branches:
      - master
    types:
      - completed
    conclusion: success

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

env:
  VERSION: 5.1
  URL_BASE: https://minio.vesoft-inc.com/rc-build/third-party

jobs:
  build_and_upload:
    runs-on:
      - self-hosted
      - Linux
      - Large
      - ${{ matrix.arch }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - centos7
          #- centos8
          #- ubuntu1604
          #- ubuntu1804
          - ubuntu2004
          - ubuntu2204
          - ubuntu2404
        arch:
          - x64
          - arm64
    container:
      image: vesoft/third-party-build:${{ matrix.os }}
    steps:
    - uses: webiny/action-post-run@3.1.0
      with:
        run: find . -mindepth 1 -delete
    - uses: actions/checkout@v4
    - name: Set up environment
      if: matrix.os == 'centos7'
      run: |
        export URL=https://raw.githubusercontent.com/vesoft-inc/nebula-gears/master/install
        bash <(curl -Ls $URL)
        install-gcc --version=9.5.0
    - name: Pre-Build
      run: |
        mkdir -p _build
        sed -i "s#^URL_BASE=.*#URL_BASE=$URL_BASE#" .env
        sed -i "s#^VERSION=.*#VERSION=$VERSION#" .env
        cat .env
    - name: Build
      run: |
        if [[ "${{ matrix.os }}" == "centos7" ]]; then
          export TOOLSET_GCC_DIR=/opt/vesoft/toolset/gcc/9.5.0
          export CC=${TOOLSET_GCC_DIR}/bin/gcc
          export CXX=${TOOLSET_GCC_DIR}/bin/g++
          export PATH=${TOOLSET_GCC_DIR}/bin:${PATH}
          export LD_LIBRARY_PATH=${TOOLSET_GCC_DIR}/lib64:$LD_LIBRARY_PATH
        fi
        build_package=1 ../build.sh
      working-directory: _build/
    - name: Setup MinIO
      uses: vesoft-inc/.github/actions/setup-minio@master
      with:
        minio_url: ${{ secrets.MINIO_ENDPOINT }}
        access_key: ${{ secrets.MINIO_KEY }}
        secret_key: ${{ secrets.MINIO_SECRET }}
    - name: Copy dir to MinIO
      run: mc cp -r _build/packages/ minio/rc-build/third-party/$VERSION/
    - uses: vesoft-inc/.github/actions/upload-to-oss@master
      with:
        key-id: ${{ secrets.OSS_ID }}
        key-secret: ${{ secrets.OSS_SECRET }}
        endpoint: ${{ secrets.OSS_ENDPOINT }}
        bucket: nebula-graph
        asset-path: _build/packages
        target-path: third-party/${{ env.VERSION }}

  repo-dispatch:
    needs: build_and_upload
    runs-on: ubuntu-latest
    steps:
    - uses: peter-evans/repository-dispatch@v3
      with:
        token: ${{ secrets.GH_PAT }}
        repository: vesoft-inc/nebula-dev-docker
        event-type: nebula-third-party-build
        client-payload: |-
          {
            "version": "${{ env.VERSION }}"
          }
